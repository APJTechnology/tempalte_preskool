{"ast":null,"code":"import { ref } from \"vue\";\nimport { router } from \"../../../../router\";\nimport VueRouter from \"vue-router\";\nimport { useStore } from \"vuex\";\nimport { Form, Field } from \"vee-validate\";\nimport * as Yup from \"yup\";\nexport default {\n  components: {\n    Form: Form,\n    Field: Field\n  },\n  data: function data() {\n    return {\n      showPassword: false,\n      password: null\n    };\n  },\n  computed: {\n    buttonLabel: function buttonLabel() {\n      return this.showPassword ? \"Hide\" : \"Show\";\n    }\n  },\n  methods: {\n    toggleShow: function toggleShow() {\n      this.showPassword = !this.showPassword;\n    }\n  },\n  setup: function setup() {\n    var users = localStorage.getItem(\"storedData\");\n    if (users === null) {\n      var password = [{\n        email: \"admin@example.com\",\n        password: \"123456\"\n      }];\n      var jsonData = JSON.stringify(password);\n      localStorage.setItem(\"storedData\", jsonData);\n    }\n    var schema = Yup.object().shape({\n      email: Yup.string().required(\"Email is required\").email(\"Email is invalid\"),\n      password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\")\n    });\n    var onSubmit = function onSubmit(values) {\n      document.getElementById(\"email\").innerHTML = \"\";\n      document.getElementById(\"password\").innerHTML = \"\";\n      var data = localStorage.getItem(\"storedData\");\n      var Pdata = JSON.parse(data);\n      var Eresult = Pdata.find(function (_ref) {\n        var email = _ref.email;\n        return email === values.email;\n      });\n      if (Eresult) {\n        if (Eresult.password === values.password) {\n          router.push(\"/index\");\n        } else {\n          document.getElementById(\"password\").innerHTML = \"Incorrect password\";\n        }\n      } else {\n        document.getElementById(\"email\").innerHTML = \"Email is not valid\";\n      }\n    };\n    return {\n      schema: schema,\n      onSubmit: onSubmit,\n      checked: ref(false)\n    };\n  }\n};","map":{"version":3,"mappings":"AA4GA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,MAAK,QAAS,oBAAoB;AAC3C,OAAOC,SAAQ,MAAO,YAAY;AAClC,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,IAAI,EAAEC,KAAI,QAAS,cAAc;AAC1C,OAAO,KAAKC,GAAE,MAAO,KAAK;AAC1B,eAAe;EACbC,UAAU,EAAE;IACVH,IAAI,EAAJA,IAAI;IACJC,KAAK,EAALA;EACF,CAAC;EACDG,IAAI,kBAAG;IACL,OAAO;MACLC,YAAY,EAAE,KAAK;MACnBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,yBAAG;MACZ,OAAO,IAAI,CAACH,YAAW,GAAI,MAAK,GAAI,MAAM;IAC5C;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,UAAU,wBAAG;MACX,IAAI,CAACL,YAAW,GAAI,CAAC,IAAI,CAACA,YAAY;IACxC;EACF,CAAC;EACDM,KAAK,mBAAG;IACN,IAAIC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAC9C,IAAIF,KAAI,KAAM,IAAI,EAAE;MAClB,IAAIN,QAAO,GAAI,CACb;QACES,KAAK,EAAE,mBAAmB;QAC1BT,QAAQ,EAAE;MACZ,CAAC,CACF;MACD,IAAMU,QAAO,GAAIC,IAAI,CAACC,SAAS,CAACZ,QAAQ,CAAC;MACzCO,YAAY,CAACM,OAAO,CAAC,YAAY,EAAEH,QAAQ,CAAC;IAC9C;IACA,IAAMI,MAAK,GAAIlB,GAAG,CAACmB,MAAM,EAAE,CAACC,KAAK,CAAC;MAChCP,KAAK,EAAEb,GAAG,CAACqB,MAAM,EAAE,CAACC,QAAQ,CAAC,mBAAmB,CAAC,CAACT,KAAK,CAAC,kBAAkB,CAAC;MAC3ET,QAAQ,EAAEJ,GAAG,CAACqB,MAAM,EAAC,CAClBE,GAAG,CAAC,CAAC,EAAE,wCAAwC,EAC/CD,QAAQ,CAAC,sBAAsB;IACpC,CAAC,CAAC;IACF,IAAME,QAAO,GAAI,SAAXA,QAAO,CAAKC,MAAM,EAAK;MAC3BC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,SAAQ,GAAI,EAAE;MAC/CF,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,SAAQ,GAAI,EAAE;MAClD,IAAI1B,IAAG,GAAIS,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MAC7C,IAAIiB,KAAI,GAAId,IAAI,CAACe,KAAK,CAAC5B,IAAI,CAAC;MAC5B,IAAM6B,OAAM,GAAIF,KAAK,CAACG,IAAI,CAAC;QAAA,IAAGnB,KAAI,QAAJA,KAAI;QAAA,OAAQA,KAAI,KAAMY,MAAM,CAACZ,KAAK;MAAA,EAAC;MACjE,IAAIkB,OAAO,EAAE;QACX,IAAIA,OAAO,CAAC3B,QAAO,KAAMqB,MAAM,CAACrB,QAAQ,EAAE;UACxCT,MAAM,CAACsC,IAAI,CAAC,QAAQ,CAAC;QACvB,OAAO;UACLP,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,SAAQ,GAAI,oBAAoB;QACtE;MACF,OAAO;QACLF,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,SAAQ,GAAI,oBAAoB;MACnE;IACF,CAAC;IACD,OAAO;MACLV,MAAM,EAANA,MAAM;MACNM,QAAQ,EAARA,QAAQ;MACRU,OAAO,EAAExC,GAAG,CAAC,KAAK;IACpB,CAAC;EACH;AACF,CAAC","names":["ref","router","VueRouter","useStore","Form","Field","Yup","components","data","showPassword","password","computed","buttonLabel","methods","toggleShow","setup","users","localStorage","getItem","email","jsonData","JSON","stringify","setItem","schema","object","shape","string","required","min","onSubmit","values","document","getElementById","innerHTML","Pdata","parse","Eresult","find","push","checked"],"sourceRoot":"","sources":["/home/jesus-adson/projects/erp-front/src/views/pages/pages/auth/login.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Main Wrapper -->\r\n    <div class=\"main-wrapper login-body\">\r\n      <div class=\"login-wrapper\">\r\n        <div class=\"container\">\r\n          <div class=\"loginbox\">\r\n            <div class=\"login-left\">\r\n              <img class=\"img-fluid\" src=\"../../../../assets/img/login.png\" alt=\"Logo\" />\r\n            </div>\r\n            <div class=\"login-right\">\r\n              <div class=\"login-right-wrap\">\r\n                <h1>Welcome to Preskool</h1>\r\n                <p class=\"account-subtitle\">\r\n                  Need an account? <router-link to=\"register\">Sign Up</router-link>\r\n                </p>\r\n                <h2>Sign in</h2>\r\n\r\n                <!-- Form -->\r\n                <Form\r\n                  class=\"login\"\r\n                  @submit=\"onSubmit\"\r\n                  :validation-schema=\"schema\"\r\n                  v-slot=\"{ errors }\"\r\n                >\r\n                  <div class=\"form-group\">\r\n                    <label>Username <span class=\"login-danger\">*</span></label>\r\n                    <Field\r\n                      name=\"email\"\r\n                      type=\"text\"\r\n                      value=\"admin@example.com\"\r\n                      class=\"form-control\"\r\n                      :class=\"{ 'is-invalid': errors.email }\"\r\n                    />\r\n                    <span class=\"profile-views\"><i class=\"fas fa-user-circle\"></i></span>\r\n                    <div class=\"invalid-feedback\">{{ errors.email }}</div>\r\n                    <div class=\"emailshow text-danger\" id=\"email\"></div>\r\n                  </div>\r\n                  <div class=\"form-group password-icon\">\r\n                    <label>Password <span class=\"login-danger\">*</span></label>\r\n                    <Field\r\n                      v-if=\"showPassword\"\r\n                      name=\"password\"\r\n                      type=\"text\"\r\n                      value=\"123456\"\r\n                      class=\"form-control pass-input\"\r\n                      :class=\"{ 'is-invalid': errors.password }\"\r\n                    />\r\n                    <Field\r\n                      v-else\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      value=\"123456\"\r\n                      class=\"form-control pass-input\"\r\n                      :class=\"{ 'is-invalid': errors.password }\"\r\n                    />\r\n                    <span\r\n                      @click=\"toggleShow\"\r\n                      class=\"profile-views toggle-password\"\r\n                      :class=\"{\r\n                        'feather-eye': showPassword,\r\n                        'feather-eye-off': !showPassword,\r\n                      }\"\r\n                    ></span>\r\n                    <div class=\"invalid-feedback\">{{ errors.password }}</div>\r\n                    <div class=\"emailshow text-danger\" id=\"password\"></div>\r\n                  </div>\r\n                  <div class=\"forgotpass\">\r\n                    <div class=\"remember-me\">\r\n                      <a-checkbox v-model:checked=\"checked\" class=\"me-2 mb-0\">\r\n                        Remember me</a-checkbox\r\n                      >\r\n                    </div>\r\n                    <router-link to=\"forgot-password\">Forgot Password?</router-link>\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <button class=\"btn btn-primary btn-block\">\r\n                      Login\r\n                    </button>\r\n<!--                    <b-button class=\"btn btn-primary btn-block\" type=\"submit\"-->\r\n<!--                      >Login</b-button>-->\r\n                  </div>\r\n                </Form>\r\n                <!-- /Form -->\r\n\r\n                <div class=\"login-or\">\r\n                  <span class=\"or-line\"></span>\r\n                  <span class=\"span-or\">or</span>\r\n                </div>\r\n\r\n                <!-- Social Login -->\r\n                <div class=\"social-login\">\r\n                  <a href=\"javascript:;\"><i class=\"fab fa-google-plus-g\"></i></a>\r\n                  <a href=\"javascript:;\"><i class=\"fab fa-facebook-f\"></i></a>\r\n                  <a href=\"javascript:;\"><i class=\"fab fa-twitter\"></i></a>\r\n                  <a href=\"javascript:;\"><i class=\"fab fa-linkedin-in\"></i></a>\r\n                </div>\r\n                <!-- /Social Login -->\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- /Main Wrapper -->\r\n  </div>\r\n</template>\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport { router } from \"../../../../router\";\r\nimport VueRouter from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\nimport { Form, Field } from \"vee-validate\";\r\nimport * as Yup from \"yup\";\r\nexport default {\r\n  components: {\r\n    Form,\r\n    Field,\r\n  },\r\n  data() {\r\n    return {\r\n      showPassword: false,\r\n      password: null,\r\n    };\r\n  },\r\n  computed: {\r\n    buttonLabel() {\r\n      return this.showPassword ? \"Hide\" : \"Show\";\r\n    },\r\n  },\r\n  methods: {\r\n    toggleShow() {\r\n      this.showPassword = !this.showPassword;\r\n    },\r\n  },\r\n  setup() {\r\n    let users = localStorage.getItem(\"storedData\");\r\n    if (users === null) {\r\n      let password = [\r\n        {\r\n          email: \"admin@example.com\",\r\n          password: \"123456\",\r\n        },\r\n      ];\r\n      const jsonData = JSON.stringify(password);\r\n      localStorage.setItem(\"storedData\", jsonData);\r\n    }\r\n    const schema = Yup.object().shape({\r\n      email: Yup.string().required(\"Email is required\").email(\"Email is invalid\"),\r\n      password: Yup.string()\r\n        .min(6, \"Password must be at least 6 characters\")\r\n        .required(\"Password is required\"),\r\n    });\r\n    const onSubmit = (values) => {\r\n      document.getElementById(\"email\").innerHTML = \"\";\r\n      document.getElementById(\"password\").innerHTML = \"\";\r\n      let data = localStorage.getItem(\"storedData\");\r\n      var Pdata = JSON.parse(data);\r\n      const Eresult = Pdata.find(({ email }) => email === values.email);\r\n      if (Eresult) {\r\n        if (Eresult.password === values.password) {\r\n          router.push(\"/index\");\r\n        } else {\r\n          document.getElementById(\"password\").innerHTML = \"Incorrect password\";\r\n        }\r\n      } else {\r\n        document.getElementById(\"email\").innerHTML = \"Email is not valid\";\r\n      }\r\n    };\r\n    return {\r\n      schema,\r\n      onSubmit,\r\n      checked: ref(false),\r\n    };\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}