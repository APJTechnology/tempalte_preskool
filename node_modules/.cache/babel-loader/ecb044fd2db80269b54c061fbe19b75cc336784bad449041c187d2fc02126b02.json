{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { ref } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { Form, Field } from \"vee-validate\";\nimport { router } from \"../../../../router\";\nimport VueRouter from \"vue-router\";\nimport * as Yup from \"yup\";\nexport default {\n  components: {\n    Form: Form,\n    Field: Field\n  },\n  data: function data() {\n    return {\n      showPassword: false,\n      showPassword1: false,\n      password: null\n    };\n  },\n  computed: _defineProperty({\n    buttonLabel: function buttonLabel() {\n      return this.showPassword ? \"Hide\" : \"Show\";\n    }\n  }, \"buttonLabel\", function buttonLabel() {\n    return this.showPassword1 ? \"Hide\" : \"Show\";\n  }),\n  methods: {\n    toggleShow: function toggleShow() {\n      this.showPassword = !this.showPassword;\n    },\n    toggleShow1: function toggleShow1() {\n      this.showPassword1 = !this.showPassword1;\n    }\n  },\n  mounted: function mounted() {},\n  setup: function setup() {\n    var schema = Yup.object().shape({\n      email: Yup.string().required(\"Email is required\").email(\"Email is invalid\"),\n      password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Password is required\"),\n      confirmpassword: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Confirm password is required\")\n    });\n    var onSubmit = function onSubmit(values) {\n      if (values.password === values.confirmpassword) {\n        var Rawdata = localStorage.getItem(\"storedData\");\n        var Pdata = [];\n        Pdata = JSON.parse(Rawdata);\n        var Eresult = Pdata.find(function (_ref) {\n          var email = _ref.email;\n          return email == values.email;\n        });\n        if (Eresult) {\n          document.getElementById(\"email\").innerHTML = \"This email are already exist\";\n        } else {\n          Pdata.push(values);\n          var jsonData = JSON.stringify(Pdata);\n          router.push(\"/index\");\n          localStorage.setItem(\"storedData\", jsonData);\n        }\n      } else {\n        document.getElementById(\"confirmpassword\").innerHTML = \"Password not matching\";\n      }\n    };\n    return {\n      schema: schema,\n      onSubmit: onSubmit\n    };\n  }\n};","map":{"version":3,"mappings":";;;;AAkIA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,IAAI,EAAEC,KAAI,QAAS,cAAc;AAC1C,SAASC,MAAK,QAAS,oBAAoB;AAC3C,OAAOC,SAAQ,MAAO,YAAY;AAClC,OAAO,KAAKC,GAAE,MAAO,KAAK;AAC1B,eAAe;EACbC,UAAU,EAAE;IACVL,IAAI,EAAJA,IAAI;IACJC,KAAK,EAALA;EACF,CAAC;EACDK,IAAI,kBAAG;IACL,OAAO;MACLC,YAAY,EAAE,KAAK;MACnBC,aAAa,EAAE,KAAK;MACpBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,QAAQ;IACNC,WAAW,yBAAG;MACZ,OAAO,IAAI,CAACJ,YAAW,GAAI,MAAK,GAAI,MAAM;IAC5C;EAAC,yCACa;IACZ,OAAO,IAAI,CAACC,aAAY,GAAI,MAAK,GAAI,MAAM;EAC7C,CAAC,CACF;EACDI,OAAO,EAAE;IACPC,UAAU,wBAAG;MACX,IAAI,CAACN,YAAW,GAAI,CAAC,IAAI,CAACA,YAAY;IACxC,CAAC;IACDO,WAAW,yBAAG;MACZ,IAAI,CAACN,aAAY,GAAI,CAAC,IAAI,CAACA,aAAa;IAC1C;EACF,CAAC;EACDO,OAAO,qBAAG,CAAC,CAAC;EACZC,KAAK,mBAAG;IACN,IAAMC,MAAK,GAAIb,GAAG,CAACc,MAAM,EAAE,CAACC,KAAK,CAAC;MAChCC,KAAK,EAAEhB,GAAG,CAACiB,MAAM,EAAE,CAACC,QAAQ,CAAC,mBAAmB,CAAC,CAACF,KAAK,CAAC,kBAAkB,CAAC;MAC3EX,QAAQ,EAAEL,GAAG,CAACiB,MAAM,EAAC,CAClBE,GAAG,CAAC,CAAC,EAAE,wCAAwC,EAC/CD,QAAQ,CAAC,sBAAsB,CAAC;MACnCE,eAAe,EAAEpB,GAAG,CAACiB,MAAM,EAAC,CACzBE,GAAG,CAAC,CAAC,EAAE,wCAAwC,EAC/CD,QAAQ,CAAC,8BAA8B;IAC5C,CAAC,CAAC;IACF,IAAMG,QAAO,GAAI,SAAXA,QAAO,CAAKC,MAAM,EAAK;MAC3B,IAAIA,MAAM,CAACjB,QAAO,KAAMiB,MAAM,CAACF,eAAe,EAAE;QAC9C,IAAIG,OAAM,GAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;QAChD,IAAIC,KAAI,GAAI,EAAE;QACdA,KAAI,GAAIC,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;QAC3B,IAAMM,OAAM,GAAIH,KAAK,CAACI,IAAI,CAAC;UAAA,IAAGd,KAAI,QAAJA,KAAI;UAAA,OAAQA,KAAI,IAAKM,MAAM,CAACN,KAAK;QAAA,EAAC;QAChE,IAAIa,OAAO,EAAE;UACXE,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,SAAQ,GAAI,8BAA8B;QAC7E,OAAO;UACLP,KAAK,CAACQ,IAAI,CAACZ,MAAM,CAAC;UAClB,IAAMa,QAAO,GAAIR,IAAI,CAACS,SAAS,CAACV,KAAK,CAAC;UACtC5B,MAAM,CAACoC,IAAI,CAAC,QAAQ,CAAC;UACrBV,YAAY,CAACa,OAAO,CAAC,YAAY,EAAEF,QAAQ,CAAC;QAC9C;MACF,OAAO;QACLJ,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,CAACC,SAAQ,GAAI,uBAAuB;MAChF;IACF,CAAC;IACD,OAAO;MACLpB,MAAM,EAANA,MAAM;MACNQ,QAAQ,EAARA;IACF,CAAC;EACH;AACF,CAAC","names":["ref","useStore","Form","Field","router","VueRouter","Yup","components","data","showPassword","showPassword1","password","computed","buttonLabel","methods","toggleShow","toggleShow1","mounted","setup","schema","object","shape","email","string","required","min","confirmpassword","onSubmit","values","Rawdata","localStorage","getItem","Pdata","JSON","parse","Eresult","find","document","getElementById","innerHTML","push","jsonData","stringify","setItem"],"sourceRoot":"","sources":["/home/jesus-adson/projects/erp-front/src/views/pages/pages/auth/register.vue"],"sourcesContent":["<template>\r\n  <!-- Main Wrapper -->\r\n  <div class=\"main-wrapper login-body\">\r\n    <div class=\"login-wrapper\">\r\n      <div class=\"container\">\r\n        <div class=\"loginbox\">\r\n          <div class=\"login-left\">\r\n            <img class=\"img-fluid\" src=\"../../../../assets/img/login.png\" alt=\"Logo\" />\r\n          </div>\r\n          <div class=\"login-right\">\r\n            <div class=\"login-right-wrap\">\r\n              <h1>Sign Up</h1>\r\n              <p class=\"account-subtitle\">Enter details to create your account</p>\r\n\r\n              <!-- Form -->\r\n              <div class=\"form-group\">\r\n                <label>Username <span class=\"login-danger\">*</span></label>\r\n                <b-form-input class=\"form-control\" type=\"text\" placeholder=\"Name\" />\r\n                <span class=\"profile-views\"><i class=\"fas fa-user-circle\"></i></span>\r\n              </div>\r\n              <Form\r\n                class=\"register\"\r\n                @submit=\"onSubmit\"\r\n                :validation-schema=\"schema\"\r\n                v-slot=\"{ errors }\"\r\n              >\r\n                <div class=\"form-group\">\r\n                  <label>Email <span class=\"login-danger\">*</span></label>\r\n                  <Field\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Email\"\r\n                    :class=\"{ 'is-invalid': errors.email }\"\r\n                  />\r\n                  <span class=\"profile-views\"><i class=\"fas fa-envelope\"></i></span>\r\n                  <div class=\"invalid-feedback\">{{ errors.email }}</div>\r\n                  <div class=\"emailshow text-danger\" id=\"email\"></div>\r\n                </div>\r\n                <div class=\"form-group password-icon2\">\r\n                  <label>Password <span class=\"login-danger\">*</span></label>\r\n                  <Field\r\n                    v-if=\"showPassword\"\r\n                    name=\"password\"\r\n                    type=\"text\"\r\n                    class=\"form-control pass-input\"\r\n                    placeholder=\"Password\"\r\n                    :class=\"{ 'is-invalid': errors.password }\"\r\n                  />\r\n                  <Field\r\n                    v-else\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    class=\"form-control pass-input\"\r\n                    placeholder=\"Password\"\r\n                    :class=\"{ 'is-invalid': errors.password }\"\r\n                  />\r\n                  <span\r\n                    @click=\"toggleShow\"\r\n                    class=\"profile-views feather-eye toggle-password1\"\r\n                    :class=\"{\r\n                      'feather-eye': showPassword,\r\n                      'feather-eye-off': !showPassword,\r\n                    }\"\r\n                  ></span>\r\n                  <div class=\"invalid-feedback\">{{ errors.password }}</div>\r\n                  <div class=\"emailshow text-danger\" id=\"password\"></div>\r\n                </div>\r\n                <div class=\"form-group password-icon2\">\r\n                  <label>Confirm password <span class=\"login-danger\">*</span></label>\r\n                  <Field\r\n                    v-if=\"showPassword1\"\r\n                    name=\"confirmpassword\"\r\n                    type=\"text\"\r\n                    class=\"form-control pass-input1\"\r\n                    placeholder=\"Confirm Password\"\r\n                    :class=\"{ 'is-invalid': errors.confirmpassword }\"\r\n                  />\r\n                  <Field\r\n                    v-else\r\n                    name=\"confirmpassword\"\r\n                    type=\"password\"\r\n                    class=\"form-control pass-input1\"\r\n                    placeholder=\"Confirm Password\"\r\n                    :class=\"{ 'is-invalid': errors.confirmpassword }\"\r\n                  />\r\n                  <span\r\n                    @click=\"toggleShow1\"\r\n                    class=\"profile-views toggle-password\"\r\n                    :class=\"{\r\n                      'feather-eye': showPassword1,\r\n                      'feather-eye-off': !showPassword1,\r\n                    }\"\r\n                  ></span>\r\n                  <div class=\"invalid-feedback\">{{ errors.confirmpassword }}</div>\r\n                  <div class=\"emailshow text-danger\" id=\"confirmpassword\"></div>\r\n                </div>\r\n                <div class=\"dont-have\">\r\n                  Already Registered? <router-link to=\"/\">Login</router-link>\r\n                </div>\r\n                <div class=\"form-group mb-0\">\r\n                  <b-button variant=\"primary btn-block\" type=\"submit\">\r\n                    Register\r\n                  </b-button>\r\n                </div>\r\n              </Form>\r\n              <!-- /Form -->\r\n\r\n              <div class=\"login-or\">\r\n                <span class=\"or-line\"></span>\r\n                <span class=\"span-or\">or</span>\r\n              </div>\r\n\r\n              <!-- Social Login -->\r\n              <div class=\"social-login\">\r\n                <a href=\"javascript:;\"><i class=\"fab fa-google-plus-g\"></i></a>\r\n                <a href=\"javascript:;\"><i class=\"fab fa-facebook-f\"></i></a>\r\n                <a href=\"javascript:;\"><i class=\"fab fa-twitter\"></i></a>\r\n                <a href=\"javascript:;\"><i class=\"fab fa-linkedin-in\"></i></a>\r\n              </div>\r\n              <!-- /Social Login -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- /Main Wrapper -->\r\n</template>\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { Form, Field } from \"vee-validate\";\r\nimport { router } from \"../../../../router\";\r\nimport VueRouter from \"vue-router\";\r\nimport * as Yup from \"yup\";\r\nexport default {\r\n  components: {\r\n    Form,\r\n    Field,\r\n  },\r\n  data() {\r\n    return {\r\n      showPassword: false,\r\n      showPassword1: false,\r\n      password: null,\r\n    };\r\n  },\r\n  computed: {\r\n    buttonLabel() {\r\n      return this.showPassword ? \"Hide\" : \"Show\";\r\n    },\r\n    buttonLabel() {\r\n      return this.showPassword1 ? \"Hide\" : \"Show\";\r\n    },\r\n  },\r\n  methods: {\r\n    toggleShow() {\r\n      this.showPassword = !this.showPassword;\r\n    },\r\n    toggleShow1() {\r\n      this.showPassword1 = !this.showPassword1;\r\n    },\r\n  },\r\n  mounted() {},\r\n  setup() {\r\n    const schema = Yup.object().shape({\r\n      email: Yup.string().required(\"Email is required\").email(\"Email is invalid\"),\r\n      password: Yup.string()\r\n        .min(6, \"Password must be at least 6 characters\")\r\n        .required(\"Password is required\"),\r\n      confirmpassword: Yup.string()\r\n        .min(6, \"Password must be at least 6 characters\")\r\n        .required(\"Confirm password is required\"),\r\n    });\r\n    const onSubmit = (values) => {\r\n      if (values.password === values.confirmpassword) {\r\n        let Rawdata = localStorage.getItem(\"storedData\");\r\n        let Pdata = [];\r\n        Pdata = JSON.parse(Rawdata);\r\n        const Eresult = Pdata.find(({ email }) => email == values.email);\r\n        if (Eresult) {\r\n          document.getElementById(\"email\").innerHTML = \"This email are already exist\";\r\n        } else {\r\n          Pdata.push(values);\r\n          const jsonData = JSON.stringify(Pdata);\r\n          router.push(\"/index\");\r\n          localStorage.setItem(\"storedData\", jsonData);\r\n        }\r\n      } else {\r\n        document.getElementById(\"confirmpassword\").innerHTML = \"Password not matching\";\r\n      }\r\n    };\r\n    return {\r\n      schema,\r\n      onSubmit,\r\n    };\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}