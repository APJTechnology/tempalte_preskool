{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nimport { ref } from 'vue';\nimport { router } from '@/router';\nimport { Form, Field } from 'vee-validate';\nimport * as Yup from 'yup';\nimport { login } from '../services';\nexport default {\n  components: {\n    Form: Form,\n    Field: Field\n  },\n  data: function data() {\n    return {\n      showPassword: false,\n      password: null\n    };\n  },\n  computed: {\n    buttonLabel: function buttonLabel() {\n      return this.showPassword ? 'Hide' : 'Show';\n    }\n  },\n  methods: {\n    toggleShow: function toggleShow() {\n      this.showPassword = !this.showPassword;\n    }\n  },\n  setup: function setup() {\n    var users = localStorage.getItem('storedData');\n    if (users === null) {\n      var password = [{\n        email: 'admin@example.com',\n        password: '123456'\n      }];\n      var jsonData = JSON.stringify(password);\n      localStorage.setItem('storedData', jsonData);\n    }\n    var schema = Yup.object().shape({\n      email: Yup.string().required('Email is required').email('Email is invalid'),\n      password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required')\n    });\n    var onSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(values) {\n        var email, password, token, data, Pdata, Eresult;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              email = values.email, password = values.password;\n              _context.next = 3;\n              return login(values);\n            case 3:\n              token = _context.sent;\n              console.log(token);\n              document.getElementById('email').innerHTML = '';\n              document.getElementById('password').innerHTML = '';\n              data = localStorage.getItem('storedData');\n              Pdata = JSON.parse(data);\n              Eresult = Pdata.find(function (_ref2) {\n                var email = _ref2.email;\n                return email === values.email;\n              });\n              if (Eresult) {\n                if (Eresult.password === values.password) {\n                  router.push('/index');\n                } else {\n                  document.getElementById('password').innerHTML = 'Incorrect password';\n                }\n              } else {\n                document.getElementById('email').innerHTML = 'Email is not valid';\n              }\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function onSubmit(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return {\n      schema: schema,\n      onSubmit: onSubmit,\n      checked: ref(false)\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","router","Form","Field","Yup","login","components","data","showPassword","password","computed","buttonLabel","methods","toggleShow","setup","users","localStorage","getItem","email","jsonData","JSON","stringify","setItem","schema","object","shape","string","required","min","onSubmit","values","token","console","log","document","getElementById","innerHTML","Pdata","parse","Eresult","find","push","checked"],"sourceRoot":"","sources":["/home/jesus-adson/projects/erp-front/src/modules/auth/views/login.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Main Wrapper -->\n    <div class=\"main-wrapper login-body\">\n      <div class=\"login-wrapper\">\n        <div class=\"container\">\n          <div class=\"loginbox\">\n            <!-- <div class=\"login-left\">\n              <img\n                class=\"img-fluid\"\n                src=\"../../../../assets/img/login.png\"\n                alt=\"Logo\"\n              />\n            </div> -->\n            <div class=\"login-right\">\n              <div class=\"login-right-wrap\">\n                <h1>ATECH</h1>\n                <h2>Login</h2>\n\n                <!-- Form -->\n                <Form\n                  class=\"login\"\n                  @submit=\"onSubmit\"\n                  :validation-schema=\"schema\"\n                  v-slot=\"{ errors }\"\n                >\n                  <div class=\"form-group\">\n                    <label>Usuário <span class=\"login-danger\">*</span></label>\n                    <Field\n                      name=\"email\"\n                      type=\"email\"\n                      value=\"admin@example.com\"\n                      class=\"form-control\"\n                      :class=\"{ 'is-invalid': errors.email }\"\n                    />\n                    <span class=\"profile-views\"\n                      ><i class=\"fas fa-user-circle\"></i\n                    ></span>\n                    <div class=\"invalid-feedback\">{{ errors.email }}</div>\n                    <div class=\"emailshow text-danger\" id=\"email\"></div>\n                  </div>\n                  <div class=\"form-group password-icon\">\n                    <label>Senha <span class=\"login-danger\">*</span></label>\n                    <Field\n                      v-if=\"showPassword\"\n                      name=\"password\"\n                      type=\"text\"\n                      value=\"123456\"\n                      class=\"form-control pass-input\"\n                      :class=\"{ 'is-invalid': errors.password }\"\n                    />\n                    <Field\n                      v-else\n                      name=\"password\"\n                      type=\"password\"\n                      value=\"123456\"\n                      class=\"form-control pass-input\"\n                      :class=\"{ 'is-invalid': errors.password }\"\n                    />\n                    <span\n                      @click=\"toggleShow\"\n                      class=\"profile-views toggle-password\"\n                      :class=\"{\n                        'feather-eye': showPassword,\n                        'feather-eye-off': !showPassword,\n                      }\"\n                    ></span>\n                    <div class=\"invalid-feedback\">{{ errors.password }}</div>\n                    <div class=\"emailshow text-danger\" id=\"password\"></div>\n                  </div>\n                  <div class=\"forgotpass\">\n                    <!-- <div class=\"remember-me\">\n                      <a-checkbox v-model:checked=\"checked\" class=\"me-2 mb-0\">\n                        Remember me</a-checkbox\n                      >\n                    </div>\n                    <router-link to=\"forgot-password\"\n                      >Forgot Password?</router-link\n                    > -->\n                  </div>\n                  <div class=\"form-group\">\n                    <button class=\"btn btn-primary btn-block\">Login</button>\n                  </div>\n                </Form>\n                <!-- /Form -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- /Main Wrapper -->\n  </div>\n</template>\n<script>\nimport { ref } from 'vue';\nimport { router } from '@/router';\nimport { Form, Field } from 'vee-validate';\nimport * as Yup from 'yup';\nimport { login } from '../services';\n\nexport default {\n  components: {\n    Form,\n    Field,\n  },\n  data() {\n    return {\n      showPassword: false,\n      password: null,\n    };\n  },\n  computed: {\n    buttonLabel() {\n      return this.showPassword ? 'Hide' : 'Show';\n    },\n  },\n  methods: {\n    toggleShow() {\n      this.showPassword = !this.showPassword;\n    },\n  },\n  setup() {\n    let users = localStorage.getItem('storedData');\n    if (users === null) {\n      let password = [\n        {\n          email: 'admin@example.com',\n          password: '123456',\n        },\n      ];\n      const jsonData = JSON.stringify(password);\n      localStorage.setItem('storedData', jsonData);\n    }\n    const schema = Yup.object().shape({\n      email: Yup.string()\n        .required('Email is required')\n        .email('Email is invalid'),\n      password: Yup.string()\n        .min(6, 'Password must be at least 6 characters')\n        .required('Password is required'),\n    });\n    const onSubmit = async (values) => {\n      const { email, password } = values;\n\n      const token = await login(values);\n\n      console.log(token);\n\n      document.getElementById('email').innerHTML = '';\n      document.getElementById('password').innerHTML = '';\n      let data = localStorage.getItem('storedData');\n      var Pdata = JSON.parse(data);\n      const Eresult = Pdata.find(({ email }) => email === values.email);\n      if (Eresult) {\n        if (Eresult.password === values.password) {\n          router.push('/index');\n        } else {\n          document.getElementById('password').innerHTML = 'Incorrect password';\n        }\n      } else {\n        document.getElementById('email').innerHTML = 'Email is not valid';\n      }\n    };\n    return {\n      schema,\n      onSubmit,\n      checked: ref(false),\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}