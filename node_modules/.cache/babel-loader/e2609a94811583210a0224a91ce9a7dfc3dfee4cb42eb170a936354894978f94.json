{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { Form, Field } from 'vee-validate';\nimport { router } from '../../../../router';\nimport VueRouter from 'vue-router';\nimport * as Yup from 'yup';\nexport default {\n  components: {\n    Form: Form,\n    Field: Field\n  },\n  data: function data() {\n    return {\n      showPassword: false,\n      showPassword1: false,\n      password: null\n    };\n  },\n  computed: _defineProperty({\n    buttonLabel: function buttonLabel() {\n      return this.showPassword ? 'Hide' : 'Show';\n    }\n  }, \"buttonLabel\", function buttonLabel() {\n    return this.showPassword1 ? 'Hide' : 'Show';\n  }),\n  methods: {\n    toggleShow: function toggleShow() {\n      this.showPassword = !this.showPassword;\n    },\n    toggleShow1: function toggleShow1() {\n      this.showPassword1 = !this.showPassword1;\n    }\n  },\n  mounted: function mounted() {},\n  setup: function setup() {\n    var schema = Yup.object().shape({\n      email: Yup.string().required('Email is required').email('Email is invalid'),\n      password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n      confirmpassword: Yup.string().min(6, 'Password must be at least 6 characters').required('Confirm password is required')\n    });\n    var onSubmit = function onSubmit(values) {\n      if (values.password === values.confirmpassword) {\n        var Rawdata = localStorage.getItem('storedData');\n        var Pdata = [];\n        Pdata = JSON.parse(Rawdata);\n        var Eresult = Pdata.find(function (_ref) {\n          var email = _ref.email;\n          return email == values.email;\n        });\n        if (Eresult) {\n          document.getElementById('email').innerHTML = 'This email are already exist';\n        } else {\n          Pdata.push(values);\n          var jsonData = JSON.stringify(Pdata);\n          router.push('/index');\n          localStorage.setItem('storedData', jsonData);\n        }\n      } else {\n        document.getElementById('confirmpassword').innerHTML = 'Password not matching';\n      }\n    };\n    return {\n      schema: schema,\n      onSubmit: onSubmit\n    };\n  }\n};","map":{"version":3,"mappings":";;;;AAoJA,SAASA,GAAE,QAAS,KAAK;AACzB,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,IAAI,EAAEC,KAAI,QAAS,cAAc;AAC1C,SAASC,MAAK,QAAS,oBAAoB;AAC3C,OAAOC,SAAQ,MAAO,YAAY;AAClC,OAAO,KAAKC,GAAE,MAAO,KAAK;AAC1B,eAAe;EACbC,UAAU,EAAE;IACVL,IAAI,EAAJA,IAAI;IACJC,KAAK,EAALA;EACF,CAAC;EACDK,IAAI,kBAAG;IACL,OAAO;MACLC,YAAY,EAAE,KAAK;MACnBC,aAAa,EAAE,KAAK;MACpBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,QAAQ;IACNC,WAAW,yBAAG;MACZ,OAAO,IAAI,CAACJ,YAAW,GAAI,MAAK,GAAI,MAAM;IAC5C;EAAC,yCACa;IACZ,OAAO,IAAI,CAACC,aAAY,GAAI,MAAK,GAAI,MAAM;EAC7C,CAAC,CACF;EACDI,OAAO,EAAE;IACPC,UAAU,wBAAG;MACX,IAAI,CAACN,YAAW,GAAI,CAAC,IAAI,CAACA,YAAY;IACxC,CAAC;IACDO,WAAW,yBAAG;MACZ,IAAI,CAACN,aAAY,GAAI,CAAC,IAAI,CAACA,aAAa;IAC1C;EACF,CAAC;EACDO,OAAO,qBAAG,CAAC,CAAC;EACZC,KAAK,mBAAG;IACN,IAAMC,MAAK,GAAIb,GAAG,CAACc,MAAM,EAAE,CAACC,KAAK,CAAC;MAChCC,KAAK,EAAEhB,GAAG,CAACiB,MAAM,EAAC,CACfC,QAAQ,CAAC,mBAAmB,EAC5BF,KAAK,CAAC,kBAAkB,CAAC;MAC5BX,QAAQ,EAAEL,GAAG,CAACiB,MAAM,EAAC,CAClBE,GAAG,CAAC,CAAC,EAAE,wCAAwC,EAC/CD,QAAQ,CAAC,sBAAsB,CAAC;MACnCE,eAAe,EAAEpB,GAAG,CAACiB,MAAM,EAAC,CACzBE,GAAG,CAAC,CAAC,EAAE,wCAAwC,EAC/CD,QAAQ,CAAC,8BAA8B;IAC5C,CAAC,CAAC;IACF,IAAMG,QAAO,GAAI,SAAXA,QAAO,CAAKC,MAAM,EAAK;MAC3B,IAAIA,MAAM,CAACjB,QAAO,KAAMiB,MAAM,CAACF,eAAe,EAAE;QAC9C,IAAIG,OAAM,GAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;QAChD,IAAIC,KAAI,GAAI,EAAE;QACdA,KAAI,GAAIC,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;QAC3B,IAAMM,OAAM,GAAIH,KAAK,CAACI,IAAI,CAAC;UAAA,IAAGd,KAAI,QAAJA,KAAI;UAAA,OAAQA,KAAI,IAAKM,MAAM,CAACN,KAAK;QAAA,EAAC;QAChE,IAAIa,OAAO,EAAE;UACXE,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,SAAQ,GACvC,8BAA8B;QAClC,OAAO;UACLP,KAAK,CAACQ,IAAI,CAACZ,MAAM,CAAC;UAClB,IAAMa,QAAO,GAAIR,IAAI,CAACS,SAAS,CAACV,KAAK,CAAC;UACtC5B,MAAM,CAACoC,IAAI,CAAC,QAAQ,CAAC;UACrBV,YAAY,CAACa,OAAO,CAAC,YAAY,EAAEF,QAAQ,CAAC;QAC9C;MACF,OAAO;QACLJ,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,CAACC,SAAQ,GACjD,uBAAuB;MAC3B;IACF,CAAC;IACD,OAAO;MACLpB,MAAM,EAANA,MAAM;MACNQ,QAAQ,EAARA;IACF,CAAC;EACH;AACF,CAAC","names":["ref","useStore","Form","Field","router","VueRouter","Yup","components","data","showPassword","showPassword1","password","computed","buttonLabel","methods","toggleShow","toggleShow1","mounted","setup","schema","object","shape","email","string","required","min","confirmpassword","onSubmit","values","Rawdata","localStorage","getItem","Pdata","JSON","parse","Eresult","find","document","getElementById","innerHTML","push","jsonData","stringify","setItem"],"sourceRoot":"","sources":["/home/jesus-adson/projects/erp-front/src/views/pages/pages/auth/register.vue"],"sourcesContent":["<template>\n  <!-- Main Wrapper -->\n  <div class=\"main-wrapper login-body\">\n    <div class=\"login-wrapper\">\n      <div class=\"container\">\n        <div class=\"loginbox\">\n          <div class=\"login-left\">\n            <img\n              class=\"img-fluid\"\n              src=\"../../../../assets/img/login.png\"\n              alt=\"Logo\"\n            />\n          </div>\n          <div class=\"login-right\">\n            <div class=\"login-right-wrap\">\n              <h1>Sign Up</h1>\n              <p class=\"account-subtitle\">\n                Enter details to create your account\n              </p>\n\n              <!-- Form -->\n              <div class=\"form-group\">\n                <label>Username <span class=\"login-danger\">*</span></label>\n                <b-form-input\n                  class=\"form-control\"\n                  type=\"text\"\n                  placeholder=\"Name\"\n                />\n                <span class=\"profile-views\"\n                  ><i class=\"fas fa-user-circle\"></i\n                ></span>\n              </div>\n              <Form\n                class=\"register\"\n                @submit=\"onSubmit\"\n                :validation-schema=\"schema\"\n                v-slot=\"{ errors }\"\n              >\n                <div class=\"form-group\">\n                  <label>Email <span class=\"login-danger\">*</span></label>\n                  <Field\n                    name=\"email\"\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"Email\"\n                    :class=\"{ 'is-invalid': errors.email }\"\n                  />\n                  <span class=\"profile-views\"\n                    ><i class=\"fas fa-envelope\"></i\n                  ></span>\n                  <div class=\"invalid-feedback\">{{ errors.email }}</div>\n                  <div class=\"emailshow text-danger\" id=\"email\"></div>\n                </div>\n                <div class=\"form-group password-icon2\">\n                  <label>Password <span class=\"login-danger\">*</span></label>\n                  <Field\n                    v-if=\"showPassword\"\n                    name=\"password\"\n                    type=\"text\"\n                    class=\"form-control pass-input\"\n                    placeholder=\"Password\"\n                    :class=\"{ 'is-invalid': errors.password }\"\n                  />\n                  <Field\n                    v-else\n                    name=\"password\"\n                    type=\"password\"\n                    class=\"form-control pass-input\"\n                    placeholder=\"Password\"\n                    :class=\"{ 'is-invalid': errors.password }\"\n                  />\n                  <span\n                    @click=\"toggleShow\"\n                    class=\"profile-views feather-eye toggle-password1\"\n                    :class=\"{\n                      'feather-eye': showPassword,\n                      'feather-eye-off': !showPassword,\n                    }\"\n                  ></span>\n                  <div class=\"invalid-feedback\">{{ errors.password }}</div>\n                  <div class=\"emailshow text-danger\" id=\"password\"></div>\n                </div>\n                <div class=\"form-group password-icon2\">\n                  <label\n                    >Confirm password <span class=\"login-danger\">*</span></label\n                  >\n                  <Field\n                    v-if=\"showPassword1\"\n                    name=\"confirmpassword\"\n                    type=\"text\"\n                    class=\"form-control pass-input1\"\n                    placeholder=\"Confirm Password\"\n                    :class=\"{ 'is-invalid': errors.confirmpassword }\"\n                  />\n                  <Field\n                    v-else\n                    name=\"confirmpassword\"\n                    type=\"password\"\n                    class=\"form-control pass-input1\"\n                    placeholder=\"Confirm Password\"\n                    :class=\"{ 'is-invalid': errors.confirmpassword }\"\n                  />\n                  <span\n                    @click=\"toggleShow1\"\n                    class=\"profile-views toggle-password\"\n                    :class=\"{\n                      'feather-eye': showPassword1,\n                      'feather-eye-off': !showPassword1,\n                    }\"\n                  ></span>\n                  <div class=\"invalid-feedback\">\n                    {{ errors.confirmpassword }}\n                  </div>\n                  <div class=\"emailshow text-danger\" id=\"confirmpassword\"></div>\n                </div>\n                <div class=\"dont-have\">\n                  Already Registered? <router-link to=\"/\">Login</router-link>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <b-button variant=\"primary btn-block\" type=\"submit\">\n                    Register\n                  </b-button>\n                </div>\n              </Form>\n              <!-- /Form -->\n\n              <div class=\"login-or\">\n                <span class=\"or-line\"></span>\n                <span class=\"span-or\">or</span>\n              </div>\n\n              <!-- Social Login -->\n              <div class=\"social-login\">\n                <a href=\"javascript:;\"><i class=\"fab fa-google-plus-g\"></i></a>\n                <a href=\"javascript:;\"><i class=\"fab fa-facebook-f\"></i></a>\n                <a href=\"javascript:;\"><i class=\"fab fa-twitter\"></i></a>\n                <a href=\"javascript:;\"><i class=\"fab fa-linkedin-in\"></i></a>\n              </div>\n              <!-- /Social Login -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- /Main Wrapper -->\n</template>\n<script>\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { Form, Field } from 'vee-validate';\nimport { router } from '../../../../router';\nimport VueRouter from 'vue-router';\nimport * as Yup from 'yup';\nexport default {\n  components: {\n    Form,\n    Field,\n  },\n  data() {\n    return {\n      showPassword: false,\n      showPassword1: false,\n      password: null,\n    };\n  },\n  computed: {\n    buttonLabel() {\n      return this.showPassword ? 'Hide' : 'Show';\n    },\n    buttonLabel() {\n      return this.showPassword1 ? 'Hide' : 'Show';\n    },\n  },\n  methods: {\n    toggleShow() {\n      this.showPassword = !this.showPassword;\n    },\n    toggleShow1() {\n      this.showPassword1 = !this.showPassword1;\n    },\n  },\n  mounted() {},\n  setup() {\n    const schema = Yup.object().shape({\n      email: Yup.string()\n        .required('Email is required')\n        .email('Email is invalid'),\n      password: Yup.string()\n        .min(6, 'Password must be at least 6 characters')\n        .required('Password is required'),\n      confirmpassword: Yup.string()\n        .min(6, 'Password must be at least 6 characters')\n        .required('Confirm password is required'),\n    });\n    const onSubmit = (values) => {\n      if (values.password === values.confirmpassword) {\n        let Rawdata = localStorage.getItem('storedData');\n        let Pdata = [];\n        Pdata = JSON.parse(Rawdata);\n        const Eresult = Pdata.find(({ email }) => email == values.email);\n        if (Eresult) {\n          document.getElementById('email').innerHTML =\n            'This email are already exist';\n        } else {\n          Pdata.push(values);\n          const jsonData = JSON.stringify(Pdata);\n          router.push('/index');\n          localStorage.setItem('storedData', jsonData);\n        }\n      } else {\n        document.getElementById('confirmpassword').innerHTML =\n          'Password not matching';\n      }\n    };\n    return {\n      schema,\n      onSubmit,\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}