{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { notification } from 'ant-design-vue';\nexport default {\n  data: function data() {\n    return {\n      message: \"<span><b>Miracle Max Says</b></span><span>Have fun storming the castle!</span>\",\n      options: {\n        duration: 3000\n      },\n      title: 'Toastr',\n      items: [{\n        text: 'Dashboard',\n        href: '/index'\n      }, {\n        text: 'Components',\n        active: true\n      }]\n    };\n  },\n  computed: {\n    positions: function positions() {\n      return Object.keys(Positions).map(function (key) {\n        return {\n          key: key,\n          value: Positions[key],\n          name: Positions[key].replace(/-/, ' ')\n        };\n      });\n    },\n    hasOptions: function hasOptions() {\n      return this.options && (Object.keys(this.options).length > 1 || this.options.duration !== 3000);\n    }\n  },\n  setup: function setup() {\n    var openNotificationWithIcon = function openNotificationWithIcon(type, String) {\n      notification[type]({\n        message: 'Miracle Max Says',\n        description: 'Have fun storming the castle!'\n      });\n    };\n    var openNotificationTop = function openNotificationTop(placement) {\n      notification.open({\n        message: \"\".concat(placement),\n        description: 'I do not think that word means what you think it means.',\n        placement: placement\n      });\n    };\n    var openNotificationWithIconclose = function openNotificationWithIconclose(type, String) {\n      notification[type]({\n        message: 'With Close Button',\n        description: 'Have fun storming the castle!'\n      });\n    };\n    var openNotificationWithIconprogress = function openNotificationWithIconprogress(type, String) {\n      notification[type]({\n        message: 'Progress Bar',\n        description: 'Have fun storming the castle!'\n      });\n    };\n    var openNotificationWithIconclear = function openNotificationWithIconclear(type, String) {\n      notification[type]({\n        message: 'Clear Toast Button',\n        description: 'Clear'\n      });\n    };\n    return {\n      openNotificationWithIcon: openNotificationWithIcon,\n      openNotificationTop: openNotificationTop,\n      openNotificationWithIconclose: openNotificationWithIconclose,\n      openNotificationWithIconprogress: openNotificationWithIconprogress,\n      openNotificationWithIconclear: openNotificationWithIconclear\n    };\n  },\n  methods: {\n    openNotification: function openNotification(options) {\n      this.$notification.open(options);\n      this.nState = JSON.stringify(options, null, 2);\n    },\n    toast: function toast() {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n      var dismissible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var options = {\n        dismissible: dismissible,\n        onClick: this.onClick\n      };\n      typeof type === 'string' && (options.type = type);\n      typeof this.options.maxToasts === 'string' && (this.options.maxToasts = parseInt(this.options.maxToasts));\n      this.$toast.show(this.message, _objectSpread(_objectSpread({}, options), this.options));\n    },\n    changeDuration: function changeDuration(e) {\n      this.options.duration = !e.target.checked ? 3000 : false;\n    },\n    onClick: function onClick(e) {\n      console.log(e);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["notification","data","message","options","duration","title","items","text","href","active","computed","positions","Object","keys","Positions","map","key","value","name","replace","hasOptions","length","setup","openNotificationWithIcon","type","String","description","openNotificationTop","placement","open","openNotificationWithIconclose","openNotificationWithIconprogress","openNotificationWithIconclear","methods","openNotification","$notification","nState","JSON","stringify","toast","dismissible","onClick","maxToasts","parseInt","$toast","show","changeDuration","e","target","checked","console","log"],"sourceRoot":"","sources":["/home/jesus-adson/projects/erp-front/src/views/pages/uiinterface/baseui/toastr.vue"],"sourcesContent":["<template>\n  <!-- Main Wrapper -->\n  <div class=\"main-wrapper\">\n    <layout-header></layout-header>\n    <layout-sidebar></layout-sidebar>\n\n    <!-- Page Wrapper -->\n    <div class=\"page-wrapper\">\n      <div class=\"content container-fluid\">\n        <componentheader :title=\"title\" :items=\"items\" />\n        <div class=\"row\">\n          <div class=\"col-sm-12\">\n            <div class=\"card\" id=\"types\">\n              <div class=\"card-header\">\n                <h4 class=\"card-title\">Types</h4>\n              </div>\n              <div class=\"card-body\">\n                <b-button\n                  variant=\"outline-success me-1 mb-1\"\n                  @click=\"() => toast('success')\"\n                  >Success</b-button\n                >\n                <b-button\n                  variant=\"outline-info me-1 mb-1\"\n                  @click=\"() => toast('info')\"\n                  >Info</b-button\n                >\n                <b-button\n                  variant=\"outline-warning me-1 mb-1\"\n                  @click=\"() => toast('warning')\"\n                  >Warning</b-button\n                >\n                <b-button\n                  variant=\"outline-danger me-1 mb-1\"\n                  @click=\"() => toast('error')\"\n                  >Error</b-button\n                >\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-12\">\n            <div class=\"card\">\n              <div class=\"card-header\">\n                <h4 class=\"card-title\">Position</h4>\n              </div>\n              <div class=\"card-body\">\n                <div class=\"row\">\n                  <div class=\"col-sm-12 mb-4\">\n                    <h5 class=\"mb-3\">Top Positions</h5>\n                    <b-button\n                      variant=\"outline-primary me-1 mb-1\"\n                      @click=\"openNotificationTop('topLeft')\"\n                    >\n                      Top Left\n                    </b-button>\n                    <b-button\n                      variant=\"outline-primary me-1 mb-1\"\n                      @click=\"openNotificationTop('topCenter')\"\n                    >\n                      Top Center\n                    </b-button>\n                    <b-button\n                      variant=\"outline-primary me-1 mb-1\"\n                      @click=\"openNotificationTop('topRight')\"\n                    >\n                      Top Right\n                    </b-button>\n                    <b-button\n                      variant=\"outline-primary me-1 mb-1\"\n                      @click=\"openNotificationTop('topFullWidth')\"\n                    >\n                      Top Full Width\n                    </b-button>\n                  </div>\n\n                  <div class=\"col-sm-12\">\n                    <h5 class=\"mb-3\">Bottom Positions</h5>\n                    <b-button\n                      variant=\"outline-primary me-1 mb-1\"\n                      @click=\"openNotificationTop('bottomLeft')\"\n                    >\n                      Bottom Left\n                    </b-button>\n                    <b-button\n                      variant=\"outline-primary me-1 mb-1\"\n                      @click=\"openNotificationTop('bottomCenter')\"\n                    >\n                      Bottom Center\n                    </b-button>\n                    <b-button\n                      variant=\"outline-primary me-1 mb-1\"\n                      @click=\"openNotificationTop('bottomRight')\"\n                    >\n                      Bottom Right\n                    </b-button>\n                    <b-button\n                      variant=\"outline-primary me-1 mb-1\"\n                      @click=\"openNotificationTop('bottomFullWidth')\"\n                    >\n                      Bottom Full Width\n                    </b-button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-12\">\n            <div class=\"card\">\n              <div class=\"card-header\">\n                <h4 class=\"card-title\">Options</h4>\n              </div>\n              <div class=\"card-body\">\n                <b-button\n                  variant=\"outline-success me-1 mb-1\"\n                  @click=\"openNotificationWithIcon('info')\"\n                >\n                  Notifications\n                </b-button>\n                <b-button\n                  variant=\"outline-success me-1 mb-1\"\n                  @click=\"openNotificationWithIconclose('success')\"\n                >\n                  Close Button\n                </b-button>\n                <b-button\n                  variant=\"outline-success me-1 mb-1\"\n                  @click=\"openNotificationWithIconprogress('success')\"\n                >\n                  Progress Bar\n                </b-button>\n                <b-button\n                  variant=\"outline-success me-1 mb-1\"\n                  @click=\"openNotificationWithIconclear('info')\"\n                >\n                  Clear Toast\n                </b-button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-12\">\n            <div class=\"card\">\n              <div class=\"card-header\">\n                <h4 class=\"card-title\">Clear Toasts</h4>\n              </div>\n              <div class=\"card-body\">\n                <div class=\"row mt-1\">\n                  <div class=\"col-md-6 col-sm-12 mb-3 mb-md-0\">\n                    <h5>Remove</h5>\n                    <p>\n                      Immediately remove current toasts without using animation.\n                    </p>\n                    <b-button\n                      variant=\"outline-info me-1 mb-1\"\n                      @click=\"() => toast('info')\"\n                    >\n                      Show Toast\n                    </b-button>\n                    <b-button\n                      variant=\"outline-danger me-1 mb-1\"\n                      @click=\"() => toast('error')\"\n                    >\n                      Remove Toast\n                    </b-button>\n                  </div>\n                  <div class=\"col-md-6 col-sm-12 mb-3 mb-md-0\">\n                    <h5>Clear</h5>\n                    <p>Remove current toasts using animation.</p>\n                    <b-button\n                      variant=\"outline-info me-1 mb-1\"\n                      @click=\"() => toast('info')\"\n                    >\n                      Show Toast\n                    </b-button>\n                    <b-button\n                      variant=\"outline-danger me-1 mb-1\"\n                      @click=\"() => toast('error')\"\n                    >\n                      Clear Toast\n                    </b-button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-12\">\n            <div class=\"card\">\n              <div class=\"card-header\">\n                <h4 class=\"card-title\">Duration & Timeout</h4>\n              </div>\n              <div class=\"card-body\">\n                <p>\n                  you can use options like <code>showDuration</code>,\n                  <code>hideDuration</code>, <code>timeout</code> for your\n                  toasts. To create a sticky toast set the\n                  <code>timeout</code> to <code>0</code>\n                </p>\n                <b-button\n                  variant=\"outline-info me-1 mb-1\"\n                  @click=\"() => toast('success')\"\n                >\n                  Show .5s\n                </b-button>\n                <b-button\n                  variant=\"outline-info me-1 mb-1\"\n                  @click=\"() => toast('warning')\"\n                >\n                  Hide 3s\n                </b-button>\n                <b-button\n                  variant=\"outline-info me-1 mb-1\"\n                  @click=\"() => toast('error')\"\n                >\n                  Timeout 5s\n                </b-button>\n                <b-button\n                  variant=\"outline-info me-1 mb-1\"\n                  @click=\"() => toast('info')\"\n                >\n                  Sticky Toast\n                </b-button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <layout-footer></layout-footer>\n    </div>\n    <!-- /Page Wrapper -->\n  </div>\n  <!-- /Main Wrapper -->\n</template>\n<script>\nimport { notification } from 'ant-design-vue';\n\nexport default {\n  data() {\n    return {\n      message: `<span><b>Miracle Max Says</b></span><span>Have fun storming the castle!</span>`,\n      options: {\n        duration: 3000,\n      },\n      title: 'Toastr',\n      items: [\n        {\n          text: 'Dashboard',\n          href: '/index',\n        },\n        {\n          text: 'Components',\n          active: true,\n        },\n      ],\n    };\n  },\n  computed: {\n    positions() {\n      return Object.keys(Positions).map((key) => {\n        return {\n          key,\n          value: Positions[key],\n          name: Positions[key].replace(/-/, ' '),\n        };\n      });\n    },\n    hasOptions() {\n      return (\n        this.options &&\n        (Object.keys(this.options).length > 1 || this.options.duration !== 3000)\n      );\n    },\n  },\n  setup() {\n    const openNotificationWithIcon = (type, String) => {\n      notification[type]({\n        message: 'Miracle Max Says',\n        description: 'Have fun storming the castle!',\n      });\n    };\n    const openNotificationTop = (placement) => {\n      notification.open({\n        message: `${placement}`,\n        description: 'I do not think that word means what you think it means.',\n        placement,\n      });\n    };\n    const openNotificationWithIconclose = (type, String) => {\n      notification[type]({\n        message: 'With Close Button',\n        description: 'Have fun storming the castle!',\n      });\n    };\n    const openNotificationWithIconprogress = (type, String) => {\n      notification[type]({\n        message: 'Progress Bar',\n        description: 'Have fun storming the castle!',\n      });\n    };\n    const openNotificationWithIconclear = (type, String) => {\n      notification[type]({\n        message: 'Clear Toast Button',\n        description: 'Clear',\n      });\n    };\n    return {\n      openNotificationWithIcon,\n      openNotificationTop,\n      openNotificationWithIconclose,\n      openNotificationWithIconprogress,\n      openNotificationWithIconclear,\n    };\n  },\n  methods: {\n    openNotification(options) {\n      this.$notification.open(options);\n      this.nState = JSON.stringify(options, null, 2);\n    },\n    toast(type = 'default', dismissible = true) {\n      const options = {\n        dismissible,\n        onClick: this.onClick,\n      };\n      typeof type === 'string' && (options.type = type);\n\n      typeof this.options.maxToasts === 'string' &&\n        (this.options.maxToasts = parseInt(this.options.maxToasts));\n\n      this.$toast.show(this.message, {\n        ...options,\n        ...this.options,\n      });\n    },\n    changeDuration(e) {\n      this.options.duration = !e.target.checked ? 3000 : false;\n    },\n    onClick(e) {\n      console.log(e);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}